apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "charts.fullname" . }}
  labels:
    {{- include "charts.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "charts.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "charts.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "charts.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}

      {{- if .Values.logging.enabled }}
      initContainers:
        - name: init-config
          image: busybox
          args:
            - /bin/sh
            - -c
            - cat <<EOF > /fluentd/etc/fluent.conf
            - |
              <source>
                @type tail
                path /var/log/**/*.log
                pos_file /tmp/log/fluentd-containers.log.pos
                read_from_head false
                tag "#{ENV['APP_NAME']}"
                path_key file_path 
                # add file location to "path" key
                <parse>
                  @type json
                  json_parser json
                  time_format %Y-%m-%dT%H:%M:%S.%NZ
                </parse>
              </source>

              <filter **>
                @type record_transformer
                <record>
                  pod "#{ENV['HOSTNAME']}"
                  tag "#{ENV['APP_NAME']}"
                </record>
              </filter>

              <filter **>
                @type parser
                <parse>
                  @type json
                  json_parser json
                </parse>
                replace_invalid_sequence true
                emit_invalid_record_to_error false # send normal string if cannot parse json
                remove_key_name_field true   # if able to parse json, remove "log"
                key_name log                # parse "log" key
                reserve_data true           # keep parent data
              </filter>

              <match **>
                @type loki
                url "https://logs-prod-us-central1.grafana.net"
                username "#{ENV['username']}"
                password "#{ENV['password']}"
                extra_labels {"env":"okteto"}
                flush_interval 10s
                flush_at_shutdown true
                buffer_chunk_limit 1m
                <label>    
                  tag
                  pod
                </label>
              </match>
            - EOF
          resources:
            {{- toYaml .Values.logging.resources | nindent 12 }}
          volumeMounts:
            - name: config-volume
              mountPath: /fluentd/etc
      {{- end }}

      containers:
        - name: fluentd
          image: grafana/fluent-plugin-loki:master
          envFrom:
            - secretRef:
                name: loki
          env:
            - name: "APP_NAME"
              value: {{ include "charts.fullname" . }}
          command:
            [
              "fluentd",
              "-c",
              "/fluentd/etc/fluent.conf",
              "-p",
              "/fluentd/plugins",
              "--under-supervisor",
            ]
          resources:
            {{- toYaml .Values.logging.resources | nindent 12 }}
          volumeMounts:
            - name: varlog
              mountPath: /var/log
              readOnly: true
            - name: config-volume
              mountPath: /fluentd/etc
              readOnly: true
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: 10
            periodSeconds: 30
            httpGet:
              path: /
              port: http
          readinessProbe:
            initialDelaySeconds: 10
            periodSeconds: 30
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          envFrom:
            - configMapRef:
                name: cjtim-backend-go-configmap
          env:
            - name: GCLOUD_CREDENTIAL
              value: /tmp/configmap/serviceAcc.json
          volumeMounts:
            - name: varlog
              mountPath: /var/log
            - name: gcp-cred
              mountPath: /tmp/configmap
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: config-volume
          emptyDir: {}
        - name: varlog
          emptyDir: {}
        - name: gcp-cred
          configMap:
              name: cjtim-backend-go-configmap
