apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "charts.fullname" . }}
  labels:
    {{- include "charts.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "charts.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "charts.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "charts.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}

      {{- if .Values.logging.enabled }}
      initContainers:
        - name: init-config
          image: grafana/fluent-plugin-loki:master
          args:
            - /bin/sh
            - -c
            - |
              mkdir -p /fluentd/etc && cat <<EOF > /fluentd/etc/fluent.conf
              {{ .Values.logging.config | nindent 14 }}
              EOF
          resources:
            {{- toYaml .Values.logging.resources | nindent 12 }}
          volumeMounts:
            - name: config-volume
              mountPath: /fluentd/etc
      {{- end }}

      containers:
        {{- if .Values.logging.enabled }}
        - name: fluentd
          image: grafana/fluent-plugin-loki:master
          envFrom:
            - secretRef:
                name: loki
          env:
            - name: "APP_NAME"
              value: {{ include "charts.fullname" . }}
          command:
            [
              "fluentd",
              "-c",
              "/fluentd/etc/fluent.conf",
              "-p",
              "/fluentd/plugins",
              "--under-supervisor",
            ]
          resources:
            {{- toYaml .Values.logging.resources | nindent 12 }}
          volumeMounts:
            - name: varlog
              mountPath: /var/log
              readOnly: true
            - name: config-volume
              mountPath: /fluentd/etc
              readOnly: true
        {{- end }}

        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: 10
            periodSeconds: 30
            httpGet:
              path: /health
              port: http
          readinessProbe:
            initialDelaySeconds: 10
            periodSeconds: 30
            httpGet:
              path: /health
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          envFrom:
            - configMapRef:
                name: {{ .Values.configMap.name }}
          env:
            - name: GCLOUD_CREDENTIAL
              value: /tmp/configmap/{{ .Values.configMap.KEY_GCLOUD_CREDENTIAL }}
            - name: PORT
              value: {{ .Values.service.port | quote }}
          volumeMounts:
            - name: varlog
              mountPath: /var/log
            - name: gcp-cred
              mountPath: /tmp/configmap
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        {{- if .Values.logging.enabled }}
        - name: config-volume
          emptyDir: {}
        {{- end }}
        - name: varlog
          emptyDir: {}
        - name: gcp-cred
          configMap:
              name: {{ .Values.configMap.name }}
